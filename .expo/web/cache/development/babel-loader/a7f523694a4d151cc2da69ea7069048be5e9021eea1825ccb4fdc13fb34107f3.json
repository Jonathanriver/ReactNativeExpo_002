{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Escritorio\\\\React_001\\\\ProjectExpo\\\\ReactNativeExpo_002\\\\Navigation.js\";\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AntDesign from '@expo/vector-icons/AntDesign';\nimport SettingScreen from './Screens/SettingScreen';\nimport StackScreen from './Screens/StackScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeStackNavigator = createNativeStackNavigator();\nfunction MyStack() {\n  return _jsxDEV(HomeStackNavigator.Navigator, {\n    initialRouteName: \"HomeScreen\",\n    children: [_jsxDEV(HomeStackNavigator.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScren\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), _jsxDEV(HomeStackNavigator.Screen, {\n      name: \"Stack\",\n      component: StackScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\nconst Tab = createBottomTabNavigator();\nfunction MyTabs() {\n  return _jsxDEV(Tab.Navigator, {\n    initialRouteName: \"home\",\n    screenOptions: {\n      tabBarInactiveTintColor: 'red'\n    },\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"home\",\n      component: MyStack,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: ({\n          color,\n          size\n        }) => _jsxDEV(AntDesign, {\n          name: \"home\",\n          size: 24,\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this),\n        tabBarBadge: 3,\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"setting\",\n      component: SettingScreen,\n      options: {\n        tabBarLabel: 'Setting',\n        tabBarIcon: ({\n          color,\n          size\n        }) => _jsxDEV(AntDesign, {\n          name: \"setting\",\n          size: 24,\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this),\n        tabBarBadge: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\nexport default function Navigation() {\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(MyTabs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","createBottomTabNavigator","createNativeStackNavigator","NavigationContainer","AntDesign","SettingScreen","StackScreen","jsxDEV","_jsxDEV","HomeStackNavigator","MyStack","Navigator","initialRouteName","children","Screen","name","component","HomeScren","fileName","_jsxFileName","lineNumber","columnNumber","Tab","MyTabs","screenOptions","tabBarInactiveTintColor","options","tabBarLabel","tabBarIcon","color","size","tabBarBadge","headerShown","Navigation"],"sources":["C:/Users/jonat/OneDrive/Escritorio/React_001/ProjectExpo/ReactNativeExpo_002/Navigation.js"],"sourcesContent":["import React from 'react'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport AntDesign from '@expo/vector-icons/AntDesign';\r\n\r\n// screens\r\nimport SettingScreen from './Screens/SettingScreen'\r\nimport StackScreen from './Screens/StackScreen'\r\n\r\nconst HomeStackNavigator = createNativeStackNavigator();\r\n\r\nfunction MyStack() {\r\n    return (\r\n        <HomeStackNavigator.Navigator\r\n            initialRouteName='HomeScreen'\r\n        >\r\n            <HomeStackNavigator.Screen\r\n                name=\"HomeScreen\"\r\n                component={HomeScren} />\r\n            <HomeStackNavigator.Screen\r\n                name=\"Stack\"\r\n                component={StackScreen} />\r\n\r\n        </HomeStackNavigator.Navigator>\r\n    )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MyTabs() {\r\n    return (\r\n        <Tab.Navigator initialRouteName='home'\r\n            screenOptions={{\r\n                tabBarInactiveTintColor: 'red'\r\n            }}\r\n        >\r\n            <Tab.Screen\r\n                name=\"home\"\r\n                component={MyStack}\r\n                options={{\r\n                    tabBarLabel: 'Home',\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <AntDesign name=\"home\" size={24} color=\"black\" />\r\n                    ),\r\n                    tabBarBadge: 3,\r\n                    headerShown: false\r\n                }}\r\n            />\r\n            <Tab.Screen\r\n                name=\"setting\"\r\n                component={SettingScreen}\r\n                options={{\r\n                    tabBarLabel: 'Setting',\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <AntDesign name=\"setting\" size={24} color=\"black\" />\r\n                    ),\r\n                    tabBarBadge: 3\r\n                }}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <NavigationContainer>\r\n            <MyTabs />\r\n        </NavigationContainer>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}